# Step 1 Load Data

import pandas as pd

dataset = pd.read_csv('sal221.csv')

X = dataset.iloc[:, :-1].values

y = dataset.iloc[:,1].values

# Step 2: Split data into training and testing

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=1/3, random_state=0)

# Step 3: Fit Simple Linear Regression to Training Data

from sklearn.linear_model import LinearRegression

regressor = LinearRegression()

regressor.fit(X_train, y_train)

# Step 4: Make Prediction

y_pred = regressor.predict(X_test)

# Step 5 - Visualize training set results

import matplotlib.pyplot as plt

# plot the actual data points of training set

plt.scatter(X_train, y_train, color = 'red')

# plot the regression line

plt.plot(X_train, regressor.predict(X_train), color='blue')

plt.title('Data vs Encryption (Training set)')

plt.xlabel('Data Units')

plt.ylabel('Encryption Level')

plt.show()

# Step 6 - Visualize test set results

import matplotlib.pyplot as plt

# plot the actual data points of test set

plt.scatter(X_test, y_test, color = 'red')

# plot the regression line (same as above)

plt.plot(X_train, regressor.predict(X_train), color='blue')

plt.title('Data vs Encryption (Test set)')

plt.xlabel('Data Units')

plt.ylabel('Encryption Level')

plt.show()

# Step 7 - Make new prediction

Encryption_level_pred = regressor.predict([[5]])

print('The predicted encryption level for certain units is: ',Encryption_level_pred)

if(Encryption_level_pred< 0.8):
    
    {print("Error not detected system is safe")}
    
else:
    print("Error has been detected")